# === OSINT-–¥–æ–¥–∞—Ç–æ–∫ "–ö–æ–º–ø–∞–Ω—ñ—è –ø—ñ–¥ –º—ñ–∫—Ä–æ—Å–∫–æ–ø–æ–º" ===
# –°–ø—Ä–æ—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è GitHub / Streamlit / Colab

import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px

# --- –§—É–Ω–∫—Ü—ñ—ó ---

def get_company_data(name: str):
    """–Ü–º—ñ—Ç–∞—Ü—ñ—è –∑–∞–ø–∏—Ç—É –¥–æ –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö API (YouControl, SMIDA)."""
    # –£ —Ä–µ–∞–ª—å–Ω–æ–º—É –≤–∞—Ä—ñ–∞–Ω—Ç—ñ —Ç—É—Ç —Ä–æ–±–∏—Ç—å—Å—è requests.get(...)
    np.random.seed(len(name))
    years = [2020, 2021, 2022, 2023, 2024]
    data = {
        "year": years,
        "revenue": np.random.randint(5_000_000, 30_000_000, size=len(years)),
        "net_income": np.random.randint(-2_000_000, 5_000_000, size=len(years)),
        "assets": np.random.randint(10_000_000, 50_000_000, size=len(years)),
        "liabilities": np.random.randint(3_000_000, 25_000_000, size=len(years)),
    }
    df = pd.DataFrame(data)
    return df


def compute_risk(df: pd.DataFrame) -> dict:
    """–ü—Ä–æ—Å—Ç–∞ –æ—Ü—ñ–Ω–∫–∞ —Ä–∏–∑–∏–∫—É."""
    latest = df.iloc[-1]
    risk = 0
    details = []

    if latest["net_income"] < 0:
        risk += 25
        details.append("–ó–±–∏—Ç–æ–∫ —É –æ—Å—Ç–∞–Ω–Ω—å–æ–º—É —Ä–æ—Ü—ñ")
    if latest["liabilities"] / latest["assets"] > 0.6:
        risk += 25
        details.append("–í–∏—Å–æ–∫–∞ –∑–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å")
    if df["revenue"].iloc[-1] < df["revenue"].iloc[-2]:
        risk += 25
        details.append("–ü–∞–¥—ñ–Ω–Ω—è –≤–∏—Ä—É—á–∫–∏")
    if np.random.rand() < 0.2:
        risk += 25
        details.append("–ù–µ–≥–∞—Ç–∏–≤–Ω—ñ –Ω–æ–≤–∏–Ω–∏ / —Å–∞–Ω–∫—Ü—ñ—ó")

    return {"score": risk, "details": details}


# --- –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit ---
st.set_page_config(page_title="–ö–æ–º–ø–∞–Ω—ñ—è –ø—ñ–¥ –º—ñ–∫—Ä–æ—Å–∫–æ–ø–æ–º", layout="wide")
st.title("üîç –ö–æ–º–ø–∞–Ω—ñ—è –ø—ñ–¥ –º—ñ–∫—Ä–æ—Å–∫–æ–ø–æ–º")

company = st.text_input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∫–æ–º–ø–∞–Ω—ñ—ó:", "–†–æ—à–µ–Ω")

if st.button("–ü–æ—à—É–∫"):
    with st.spinner("–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö..."):
        df = get_company_data(company)
        risk = compute_risk(df)

    st.subheader("üìä –§—ñ–Ω–∞–Ω—Å–æ–≤—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏")
    st.dataframe(df)

    # --- –ì—Ä–∞—Ñ—ñ–∫–∏ ---
    col1, col2 = st.columns(2)
    with col1:
        st.plotly_chart(px.bar(df, x="year", y="revenue", title="–í–∏—Ä—É—á–∫–∞ –∑–∞ —Ä–æ–∫–∞–º–∏"))
    with col2:
        st.plotly_chart(px.line(df, x="year", y="net_income", title="–ß–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫"))

    # --- –û—Ü—ñ–Ω–∫–∞ —Ä–∏–∑–∏–∫—É ---
    st.subheader("‚ö†Ô∏è –û—Ü—ñ–Ω–∫–∞ —Ä–∏–∑–∏–∫—É")
    st.metric("–ó–∞–≥–∞–ª—å–Ω–∏–π —Ä–∏–∑–∏–∫", f"{risk['score']} / 100")
    if risk["details"]:
        st.write("–ü—Ä–∏—á–∏–Ω–∏ –ø—ñ–¥–≤–∏—â–µ–Ω–æ–≥–æ —Ä–∏–∑–∏–∫—É:")
        for d in risk["details"]:
            st.write(f"‚Ä¢ {d}")
    else:
        st.success("–û–∑–Ω–∞–∫ –ø—ñ–¥–≤–∏—â–µ–Ω–æ–≥–æ —Ä–∏–∑–∏–∫—É –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ ‚úÖ")

    # --- –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è ---
    st.download_button(
        "üíæ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ CSV",
        df.to_csv(index=False).encode("utf-8"),
        file_name=f"{company}_data.csv",
        mime="text/csv",
    )
